---
title: "1.Setting_records"
format: html
editor: visual
---

## Setting records

Set the records from maximum temperature series based on the day within year record at each station.

### Read maximum temperature data

```{r}
# Clear workspace
rm(list = ls())

# Read the data for maximum temperatures
tx.mat <- read.csv("../../Data/tx.data/Tx_mat.csv", header = TRUE)

# Ensure the Date column is in Date format
tx.mat$Date <- as.Date(tx.mat$Date)

# Read list of observatories of interest. Based on previous work.
stations <- read.csv("../../Data/geo_peninsula_zones.csv")
idx <- which(!is.na(stations$Zona))
stations <- stations[idx,]
```

### Calculate record indicators

Let's calculate daily records indicators.

```{r}

# Reshape data into volume
LL <- 365
TT <- nrow(tx.mat)/LL
SS <- nrow(stations)
tx3d <- array(data = as.matrix(tx.mat[,-1]), dim = c(LL,TT,SS))
if(sum(is.na(tx3d))>0) tx3d[is.na(tx3d)] <- -9999
# Set seasons
summer_idx <- c(152:243)

# Compute upper records (indicators) for summer data only
upp.rcrd <- function(x) c(1,as.numeric(diff(cummax(x))>0))
itx3d <- apply(X = tx3d[summer_idx,,], MARGIN = c(1,3), upp.rcrd)

```

### Reshape volume into matrix

```{r}
# Find dates of interest
dates.idx <- which(format(tx.mat$Date, "%m") %in% c("06", "07", "08"))

# Reshape volume
record.df <- as.data.frame(array(aperm(itx3d, c(2,1,3)),
                                 dim = c(length(dates.idx),SS)))

# Adjust the colnames so that they do not contain X before the station id
colnames(record.df) <- gsub(pattern = "X",
                            replacement = "",
                            x = colnames(tx.mat[-1]))

# Add the Date column back to the result
record.df$Date <- tx.mat[format(tx.mat$Date, "%m") %in% c("06", "07", "08"), "Date"]

# Reorder so that Date is the first column
record.df <- record.df[, c(ncol(record.df), 1:(ncol(record.df) - 1))]

```

### Save records

```{r}
# Now save this record  matrix in the Data folder
# Create folder if it does not exist
outdir <- "../../Data/record.data"
# Check if the folder exists
if (!dir.exists(outdir)) {
  # Create the folder if it doesn't exist
  dir.create(outdir)
}

# Check if the file already exists
if (!file.exists(file.path(outdir,"record.matrix.csv"))) {
  # Save the record matrix
  write.csv(x = record.df,
            file = file.path(outdir,"record.matrix.csv"),
            row.names = FALSE)
}

# Check if the file already exists
if (!file.exists(file.path(outdir,"recordvol.rds"))) {
  # Save the record volume
  saveRDS(itx3d, file = file.path(outdir,"recordvol.rds"))
}

```
