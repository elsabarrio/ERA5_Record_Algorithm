---
title: "5.1 EDA records"
format: html
editor: visual
---

## Exploratory data analysis (EDA) for breaking-records

EDA for the daily maximum temperature ($T_x$) and geopotential heigth (G).

### $T_x$ record trends

```{r}
# Clear workspace
rm(list = ls())

# Load libraries
if(!is.element("ggplot2", row.names(installed.packages()))) install.packages("ggplot2")
library(ggplot2)
if(!is.element("RColorBrewer", row.names(installed.packages()))) install.packages("RColorBrewer")
library(RColorBrewer)
if(!is.element("maps", row.names(installed.packages()))) install.packages("maps")
library(maps)

# Set data directory
data_dir <- "../../Data"
if(!dir.exists(data_dir)) stop("data_dir not found")

# Read list of observatories of interest. Based on previous work.
stations <- read.csv(file.path(data_dir,"geo_peninsula_zones.csv"))
idx <- which(!is.na(stations$Zona))
stations <- stations[idx,]

# Read Tx record data
itx3d <- readRDS(file = file.path(data_dir, "record.data", "recordvol.rds"))
voldim <- dim(itx3d)

# Data directory
out_dir <- "../../Results/Exploratory/Trends"
if(!dir.exists(out_dir)) dir.create(out_dir, recursive = T)

# Response trends
# Compute yearly trend
trend_Ix <- apply(X = itx3d, MARGIN = 1, function(x) mean(x, na.rm = T))
# Plot inputs
trnd_df <- data.frame(Itx=trend_Ix,
                      t=1:voldim[1])
# Plot
g1a <- ggplot(data = trnd_df,
              mapping =  aes(x=t)) +
  geom_hline(yintercept=1, color = "gray") +
  geom_line(aes(y=Itx*t), color="black") +
  geom_smooth(aes(y=Itx*t), color="black", se = F, linetype = "dashed") +
  ylim(c(0, NA)) +
  ylab(expression(t%*%hat(p)[t])) +
  xlab("t (year)") +
  scale_x_continuous(breaks = c(1, 21, 41, 61),
                     labels = c("1 (1960)", "21 (1980)", "41 (2000)", " 61 (2020)")) +
  theme_bw()
show(g1a)
ggsave(filename = "trend_pt_Ix.pdf",
       plot = g1a,
       device = "pdf",
       path = out_dir,
       width = 5,
       height = 4)

# Plot by geographic zone
stations$Zona <- factor(stations$Zona)
levels(stations$Zona) <- c("A","C","E","G","L","NP","SP")

# Stations and colors by zone
outfile <- file.path(out_dir,"map_colzone.pdf")
pdf(file = outfile, width = 4, height = 4)
# Mapa with Iberic peninsula plus Balear islands
map(regions=sov.expand(c("Spain", "Portugal")),
    #mar = c(0,0,0,0),
    xlim=c(-10,5))
# Set zone colors for each station
auxcol <- brewer.pal(7, "Set1")[as.integer(stations$Zona)]
# Include the stations points
points(x = stations$LON,
       y = stations$LAT,
       col = "black",
       bg = auxcol, 
       pch = 21,
       cex = 1.5)
#abline(h=c(36:44), v=c(-10:10), lty=3)
dev.off()

# Probability of record trends by zone (Tx)

# Compute yearly trend by group
trend_tx <- apply(X = itx3d, MARGIN = c(1,3), function(x) mean(x, na.rm = T))
# Average by zones
trend_zn <- aggregate(x = t(trend_tx), by = list(stations$Zona), FUN=mean) 
# Plot inputs
trend_df <- data.frame(p = c(t(as.matrix(trend_zn[,-1]))),
                       Zone = rep(levels(stations$Zona), each = voldim[1]),
                       t = rep(1:voldim[1],nlevels(stations$Zona)))
# Figure
g1c <- ggplot(data = trend_df,
              mapping =  aes(x=t, y=p*t, color = Zone)) +
  geom_hline(yintercept=1,
             color = "black") +
  geom_smooth(method = "loess",
              formula = "y ~ x",
              se=F) +
  coord_cartesian(ylim=c(0,4.5)) +
  theme_bw() +
  scale_color_brewer(palette = "Set1") +
  ylab(expression(t %*% hat(p)[t])) +
  xlab("t (year)") +
  scale_x_continuous(breaks = c(1, 21, 41, 61),
                     labels = c("1 (1960)", "21 (1980)", "41 (2000)", " 61 (2020)"))
show(g1c)
# Save
ggsave(filename = "trend_pt_Ix_zone.pdf",
       plot = g1c,
       device = "pdf",
       path = out_dir,
       width = 5,
       height = 4)
```

### Geopotential along $T_x$ record trends

```{r}

# Read grid data
g300 <- read.csv(file.path(data_dir,"grid_data","g300_grid.csv"))
g500 <- read.csv(file.path(data_dir,"grid_data","g500_grid.csv"))
g700 <- read.csv(file.path(data_dir,"grid_data","g700_grid.csv"))

# Compute upper records (indicators) for summer data only
upp.rcrd <- function(x) c(1,as.numeric(diff(cummax(x))>0))
          
# Reshape into volume
Ig300_3d <- apply(X = array(data = as.matrix(g300[,-1]),
                  dim = c(voldim[2],voldim[1],ncol(g300)-1)),
                  MARGIN = c(1,3),
                  FUN =  upp.rcrd)
Ig500_3d <- apply(X = array(data = as.matrix(g500[,-1]),
                  dim = c(voldim[2],voldim[1],ncol(g500)-1)),
                  MARGIN = c(1,3),
                  FUN =  upp.rcrd)
Ig700_3d <- apply(X = array(data = as.matrix(g700[,-1]),
                  dim = c(voldim[2],voldim[1],ncol(g700)-1)),
                  MARGIN = c(1,3),
                  FUN =  upp.rcrd)

# Margin for 95-% CI
upp.rcrd <- function(x) c(1,as.numeric(diff(cummax(x))>0))
mar.95 <- function(x) qt(0.975, df = length(x)-1)*sd(x)/sqrt(length(x))
lo.x <- function(x) loess(x ~ as.numeric(1:length(x)))$fitted

# Extract average and 95-% CI margin
# G300
trend_g <- apply(X = Ig300_3d, MARGIN = c(1,3), function(x) mean(x, na.rm = T))
trnd_df <- data.frame(Itx_avg = trend_Ix,
                      Itx_mar = apply(trend_tx, 1, mar.95),
                      G300_avg = rowMeans(trend_g),
                      G300_mar = apply(trend_g, 1, mar.95), 
                      t=1:voldim[1])
# G500
trend_g <- apply(X = Ig500_3d, MARGIN = c(1,3), function(x) mean(x, na.rm = T))
trnd_df$G500_avg = rowMeans(trend_g)
trnd_df$G500_mar = apply(trend_g, 1, mar.95)
# G700
trend_g <- apply(X = Ig700_3d, MARGIN = c(1,3), function(x) mean(x, na.rm = T))
trnd_df$G700_avg = rowMeans(trend_g)
trnd_df$G700_mar = apply(trend_g, 1, mar.95)

# Plot it
g2a <- ggplot(data = trnd_df,
              mapping =  aes(x=t)) +
  geom_hline(yintercept=1, color = "gray") +
  #Tx
  geom_line(aes(y=Itx_avg*t), color="black") +
  #G300
  geom_line(aes(y=G300_avg*t), color="blue") +
  #G500
  geom_line(aes(y=G500_avg*t), color="green") +
  #G700
  geom_line(aes(y=G700_avg*t), color="red")
show(g2a)

# Apply loess
# Tx
trnd_df$Itx_lo <- lo.x(trnd_df$Itx_avg)
trnd_df$Itx_lolo <- lo.x(trnd_df$Itx_avg-trnd_df$Itx_mar)
trnd_df$Itx_loup <- lo.x(trnd_df$Itx_avg+trnd_df$Itx_mar)
# G300
trnd_df$G300_lo <- lo.x(trnd_df$G300_avg)
trnd_df$G300_lolo <- lo.x(trnd_df$G300_avg-trnd_df$G300_mar)
trnd_df$G300_loup <- lo.x(trnd_df$G300_avg+trnd_df$G300_mar)
# G500
trnd_df$G500_lo <- lo.x(trnd_df$G500_avg)
trnd_df$G500_lolo <- lo.x(trnd_df$G500_avg-trnd_df$G500_mar)
trnd_df$G500_loup <- lo.x(trnd_df$G500_avg+trnd_df$G500_mar)
# G700
trnd_df$G700_lo <- lo.x(trnd_df$G700_avg)
trnd_df$G700_lolo <- lo.x(trnd_df$G700_avg-trnd_df$G700_mar)
trnd_df$G700_loup <- lo.x(trnd_df$G700_avg+trnd_df$G700_mar)

# Plot
g2b <- ggplot(data = trnd_df,
              mapping =  aes(x=t)) +
  geom_hline(yintercept=1, color = "gray") +
  #G300
  geom_line(aes(y=G300_lo*t), color="blue") +
  geom_ribbon(aes(ymin = G300_lolo*t, ymax = G300_loup*t),
              fill = "blue",
              alpha = 0.1) +
  #G500
  geom_line(aes(y=G500_lo*t), color="green") +
  geom_ribbon(aes(ymin = G500_lolo*t, ymax = G500_loup*t),
              fill = "green",
              alpha = 0.1) +
  #G700
  geom_line(aes(y=G700_lo*t), color="red") +
  geom_ribbon(aes(ymin = G700_lolo*t, ymax = G700_loup*t),
              fill = "red",
              alpha = 0.1) +
  #Tx
  geom_line(aes(y=Itx_lo*t), color="black") +
  geom_ribbon(aes(ymin = Itx_lolo*t, ymax = Itx_loup*t),
              fill = "black",
              alpha = 0.1) +
  ylim(c(0, NA)) +
  ylab(expression(t%*%hat(p)[t])) +
  xlab("t (year)") +
  scale_x_continuous(breaks = c(1, 21, 41, 61),
                     labels = c("1 (1960)", "21 (1980)", "41 (2000)", " 61 (2020)")) +
  theme_bw()
show(g2b)
ggsave(filename = "trend_pt_Ix.pdf",
       plot = g1a,
       device = "pdf",
       path = out_dir,
       width = 5,
       height = 4)

# Plot by geographic zone
stations$Zona <- factor(stations$Zona)
levels(stations$Zona) <- c("A","C","E","G","L","NP","SP")

# Stations and colors by zone
outfile <- file.path(out_dir,"map_colzone.pdf")
pdf(file = outfile, width = 4, height = 4)
# Mapa with Iberic peninsula plus Balear islands
map(regions=sov.expand(c("Spain", "Portugal")),
    #mar = c(0,0,0,0),
    xlim=c(-10,5))
# Set zone colors for each station
auxcol <- brewer.pal(7, "Set1")[as.integer(stations$Zona)]
# Include the stations points
points(x = stations$LON,
       y = stations$LAT,
       col = "black",
       bg = auxcol, 
       pch = 21,
       cex = 1.5)
#abline(h=c(36:44), v=c(-10:10), lty=3)
dev.off()

# Probability of record trends by zone (Tx)

# Compute yearly trend by group
trend_tx <- apply(X = itx3d, MARGIN = c(1,3), function(x) mean(x, na.rm = T))
# Average by zones
trend_zn <- aggregate(x = t(trend_tx), by = list(stations$Zona), FUN=mean) 
# Plot inputs
trend_df <- data.frame(p = c(t(as.matrix(trend_zn[,-1]))),
                       Zone = rep(levels(stations$Zona), each = voldim[1]),
                       t = rep(1:voldim[1],nlevels(stations$Zona)))
# Figure
g1c <- ggplot(data = trend_df,
              mapping =  aes(x=t, y=p*t, color = Zone)) +
  geom_hline(yintercept=1,
             color = "black") +
  geom_smooth(method = "loess",
              formula = "y ~ x",
              se=F) +
  coord_cartesian(ylim=c(0,4.5)) +
  theme_bw() +
  scale_color_brewer(palette = "Set1") +
  ylab(expression(t %*% hat(p)[t])) +
  xlab("t (year)") +
  scale_x_continuous(breaks = c(1, 21, 41, 61),
                     labels = c("1 (1960)", "21 (1980)", "41 (2000)", " 61 (2020)"))
show(g1c)
# Save
ggsave(filename = "trend_pt_Ix_zone.pdf",
       plot = g1c,
       device = "pdf",
       path = out_dir,
       width = 5,
       height = 4)

```

## Exploratory data analysis (EDA) for raw data

EDA for the daily maximum temperature ($T_x$) and geopotential heigth (G).

```{r}
# Clear workspace
rm(list = ls())

# Set data directory
data_dir <- "../../Data"
if(!dir.exists(data_dir)) stop("data_dir not found")

# Data directory
out_dir <- "../../Results/Exploratory/Trends"
if(!dir.exists(out_dir)) dir.create(out_dir, recursive = T)

# Read list of observatories of interest. Based on previous work.
stations <- read.csv(file.path(data_dir,"geo_peninsula_zones.csv"))
idx <- which(!is.na(stations$Zona))
stations <- stations[idx,]

# Read the data for maximum temperatures
tx.mat <- read.csv(file.path(data_dir,"tx.data","Tx_mat.csv"), header = TRUE)
tx.mat$Date <- as.Date(tx.mat$Date)

# Set seasons
summer_idx <- c(152:243)
# Reference period


# Reshape data into volume
LL <- 365
TT <- nrow(tx.mat)/LL
SS <- nrow(stations)
tx3d <- array(data = as.matrix(tx.mat[,-1]), dim = c(LL,TT,SS))[summer_idx,,]
voldim <- dim(tx3d)


```
