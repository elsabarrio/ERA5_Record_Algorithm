---
title: "5.1 EDA records"
format: html
editor: visual
---

## Exploratory data analysis (EDA) for breaking-records

EDA for the daily maximum temperature ($T_x$) and geopotential heigth (G).

### $T_x$ record trends

```{r}
# Clear workspace
rm(list = ls())

# Load libraries
if(!is.element("ggplot2", row.names(installed.packages()))) install.packages("ggplot2")
library(ggplot2)
if(!is.element("RColorBrewer", row.names(installed.packages()))) install.packages("RColorBrewer")
library(RColorBrewer)
if(!is.element("maps", row.names(installed.packages()))) install.packages("maps")
library(maps)

# Set data directory
data_dir <- "../../Data"
if(!dir.exists(data_dir)) stop("data_dir not found")

# Read list of observatories of interest. Based on previous work.
stations <- read.csv(file.path(data_dir,"geo_peninsula_zones.csv"))
idx <- which(!is.na(stations$Zona))
stations <- stations[idx,]

# Read Tx record data
itx3d <- readRDS(file = file.path(data_dir, "record_data", "recordvol.rds"))
voldim <- dim(itx3d)

# Data directory
out_dir <- "../../Results/Exploratory/Trends"
if(!dir.exists(out_dir)) dir.create(out_dir, recursive = T)

# Response trends
# Compute yearly trend
trend_Ix <- apply(X = itx3d, MARGIN = 1, function(x) mean(x, na.rm = T))
# Plot inputs
trnd_df <- data.frame(Itx=trend_Ix,
                      t=1:voldim[1])
# Plot
g1a <- ggplot(data = trnd_df,
              mapping =  aes(x=t)) +
  geom_hline(yintercept=1, color = "gray") +
  geom_line(aes(y=Itx*t), color="black") +
  geom_smooth(aes(y=Itx*t), color="black", se = F, linetype = "dashed") +
  ylim(c(0, NA)) +
  ylab(expression(t%*%hat(p)[t])) +
  xlab("t (year)") +
  scale_x_continuous(breaks = c(1, 21, 41, 61),
                     labels = c("1 (1960)", "21 (1980)", "41 (2000)", " 61 (2020)")) +
  theme_bw()
show(g1a)
ggsave(filename = "trend_pt_Ix.pdf",
       plot = g1a,
       device = "pdf",
       path = out_dir,
       width = 5,
       height = 4)

# Plot by geographic zone
stations$Zona <- factor(stations$Zona)
levels(stations$Zona) <- c("A","C","E","G","L","NP","SP")

# Stations and colors by zone
outfile <- file.path(out_dir,"map_colzone.pdf")
pdf(file = outfile, width = 4, height = 4)
# Mapa with Iberic peninsula plus Balear islands
map(regions=sov.expand(c("Spain", "Portugal")),
    #mar = c(0,0,0,0),
    xlim=c(-10,5))
# Set zone colors for each station
auxcol <- brewer.pal(7, "Set1")[as.integer(stations$Zona)]
# Include the stations points
points(x = stations$LON,
       y = stations$LAT,
       col = "black",
       bg = auxcol, 
       pch = 21,
       cex = 1.5)
#abline(h=c(36:44), v=c(-10:10), lty=3)
dev.off()

# Probability of record trends by zone (Tx)

# Compute yearly trend by group
trend_tx <- apply(X = itx3d, MARGIN = c(1,3), function(x) mean(x, na.rm = T))
# Average by zones
trend_zn <- aggregate(x = t(trend_tx), by = list(stations$Zona), FUN=mean) 
# Plot inputs
trend_df <- data.frame(p = c(t(as.matrix(trend_zn[,-1]))),
                       Zone = rep(levels(stations$Zona), each = voldim[1]),
                       t = rep(1:voldim[1],nlevels(stations$Zona)))
# Figure
g1c <- ggplot(data = trend_df,
              mapping =  aes(x=t, y=p*t, color = Zone)) +
  geom_hline(yintercept=1,
             color = "black") +
  geom_smooth(method = "loess",
              formula = "y ~ x",
              se=F) +
  coord_cartesian(ylim=c(0,4.5)) +
  theme_bw() +
  scale_color_brewer(palette = "Set1") +
  ylab(expression(t %*% hat(p)[t])) +
  xlab("t (year)") +
  scale_x_continuous(breaks = c(1, 21, 41, 61),
                     labels = c("1 (1960)", "21 (1980)", "41 (2000)", " 61 (2020)"))
show(g1c)
# Save
ggsave(filename = "trend_pt_Ix_zone.pdf",
       plot = g1c,
       device = "pdf",
       path = out_dir,
       width = 5,
       height = 4)
```

### Geopotential along $T_x$ record trends

```{r}

# Read grid data
g300 <- read.csv(file.path(data_dir,"grid_data","g300_grid.csv"))
g500 <- read.csv(file.path(data_dir,"grid_data","g500_grid.csv"))
g700 <- read.csv(file.path(data_dir,"grid_data","g700_grid.csv"))

# Compute upper records (indicators) for summer data only
upp.rcrd <- function(x) c(1,as.numeric(diff(cummax(x))>0))
          
# Reshape into volume
Ig300_3d <- apply(X = array(data = as.matrix(g300[,-1]),
                  dim = c(voldim[2],voldim[1],ncol(g300)-1)),
                  MARGIN = c(1,3),
                  FUN =  upp.rcrd)
Ig500_3d <- apply(X = array(data = as.matrix(g500[,-1]),
                  dim = c(voldim[2],voldim[1],ncol(g500)-1)),
                  MARGIN = c(1,3),
                  FUN =  upp.rcrd)
Ig700_3d <- apply(X = array(data = as.matrix(g700[,-1]),
                  dim = c(voldim[2],voldim[1],ncol(g700)-1)),
                  MARGIN = c(1,3),
                  FUN =  upp.rcrd)

# Margin for 95-% CI
mar.95 <- function(x) qt(0.975, df = length(x)-1)*sd(x)/sqrt(length(x))
lo.x <- function(x) loess(x ~ as.numeric(1:length(x)))$fitted

# Extract average and 95-% CI margin
# G300
trend_g <- apply(X = Ig300_3d, MARGIN = c(1,3), function(x) mean(x, na.rm = T))
trnd_df <- data.frame(Itx_avg = trend_Ix,
                      Itx_mar = apply(trend_tx, 1, mar.95),
                      G300_avg = rowMeans(trend_g),
                      G300_mar = apply(trend_g, 1, mar.95), 
                      t=1:voldim[1])
# G500
trend_g <- apply(X = Ig500_3d, MARGIN = c(1,3), function(x) mean(x, na.rm = T))
trnd_df$G500_avg = rowMeans(trend_g)
trnd_df$G500_mar = apply(trend_g, 1, mar.95)
# G700
trend_g <- apply(X = Ig700_3d, MARGIN = c(1,3), function(x) mean(x, na.rm = T))
trnd_df$G700_avg = rowMeans(trend_g)
trnd_df$G700_mar = apply(trend_g, 1, mar.95)

# Plot it
g2a <- ggplot(data = trnd_df,
              mapping =  aes(x=t)) +
  geom_hline(yintercept=1, color = "gray") +
  #Tx
  geom_line(aes(y=Itx_avg*t), color="black") +
  #G300
  geom_line(aes(y=G300_avg*t), color="blue") +
  #G500
  geom_line(aes(y=G500_avg*t), color="green") +
  #G700
  geom_line(aes(y=G700_avg*t), color="red")
show(g2a)

# Reshape data.frame
# Plot inputs
avg_idx <- grep(pattern = "_avg", names(trnd_df))
trend_df <- data.frame(p = c(as.matrix(trnd_df[,avg_idx])),
                       Signal = rep(c("Tx","G300","G500","G700"), each = voldim[1]),
                       t = rep(1:voldim[1], length(avg_idx)))
# Figure
colorcito <- c("blue","green","red","black")
g2b <- ggplot(data = trend_df,
              mapping =  aes(x=t, y=p*t, color = Signal)) +
  geom_hline(yintercept=1,
             color = "gray") +
  geom_line() +
  coord_cartesian(ylim=c(0,9)) +
  theme_bw() +
  scale_color_manual(values = colorcito) +
  ylab(expression(t %*% hat(p)[t])) +
  xlab("t (year)") +
  scale_x_continuous(breaks = c(1, 21, 41, 61),
                     labels = c("1 (1960)", "21 (1980)", "41 (2000)", " 61 (2020)"))
show(g2b)

# Save
ggsave(filename = "trend_pt_Ix_G.pdf",
       plot = g2b,
       device = "pdf",
       path = out_dir,
       width = 5,
       height = 4)

# Figure
colorcito <- c("blue","green","red","black")
g2c <- ggplot(data = trend_df,
              mapping =  aes(x=t, y=p*t, color = Signal)) +
  geom_hline(yintercept=1,
             color = "gray") +
  geom_smooth(method = "loess",
              formula = "y ~ x",
              se=F) +
  coord_cartesian(ylim=c(0,5)) +
  theme_bw() +
  scale_color_manual(values = colorcito) +
  ylab(expression(t %*% hat(p)[t])) +
  xlab("t (year)") +
  scale_x_continuous(breaks = c(1, 21, 41, 61),
                     labels = c("1 (1960)", "21 (1980)", "41 (2000)", " 61 (2020)"))
show(g2c)

# Save
ggsave(filename = "trend_pt_Ix_G_loess.pdf",
       plot = g2c,
       device = "pdf",
       path = out_dir,
       width = 5,
       height = 4)

```

## Exploratory data analysis (EDA) for raw data

### Raw $T_x$

EDA for the daily maximum temperature ($T_x$).

```{r}
# Clear workspace
rm(list = ls())

# Set data directory
data_dir <- "../../Data"
if(!dir.exists(data_dir)) stop("data_dir not found")

# Data directory
out_dir <- "../../Results/Exploratory/Trends"
if(!dir.exists(out_dir)) dir.create(out_dir, recursive = T)

# Read list of observatories of interest. Based on previous work.
stations <- read.csv(file.path(data_dir,"geo_peninsula_zones.csv"))
idx <- which(!is.na(stations$Zona))
stations <- stations[idx,]

# Read the data for maximum temperatures
tx.mat <- read.csv(file.path(data_dir,"tx.data","Tx_mat.csv"), header = TRUE)
tx.mat$Date <- as.Date(tx.mat$Date)

# Set seasons
summer_idx <- c(152:243)
test_idx <- 52:64
# Reshape data into volume
LL <- 365
TT <- nrow(tx.mat)/LL
SS <- nrow(stations)
tx3d <- array(data = as.matrix(tx.mat[,-1]), dim = c(LL,TT,SS))[summer_idx,,]/10
voldim <- dim(tx3d)

# Get standardized Tx trends in the test period
# Compute yearly trend
trend_ztx <- apply(X = tx3d, MARGIN = 2, function(x) mean(x, na.rm = T))
# Plot inputs
trnd_df <- data.frame(ztx = trend_ztx,
                      t = 1:voldim[2])

# Plot
g3a <- ggplot(data = trnd_df,
              mapping =  aes(x=t)) +
  #geom_hline(yintercept=0, color = "gray") +
  geom_line(aes(y=ztx), color="black") +
  geom_smooth(aes(y=ztx), color="black", se = F, linetype = "dashed") +
  #ylim(c(-1, 1)) +
  ylab(expression(T[x] * phantom(0) * (degree*C))) +
  xlab("t (year)") +
  scale_x_continuous(breaks = c(1, 21, 41, 61),
                     labels = c("1 (1960)", "21 (1980)", "41 (2000)", " 61 (2020)")) +
  theme_bw()
show(g3a)

# Save
ggsave(filename = "trend_Tx.pdf",
       plot = g3a,
       device = "pdf",
       path = out_dir,
       width = 5,
       height = 4)


```

### Standardized $T_x$

EDA for the daily maximum temperature ($T_x$).

```{r}
# Clear workspace
rm(list = ls())

# Set data directory
data_dir <- "../../Data"
if(!dir.exists(data_dir)) stop("data_dir not found")

# Data directory
out_dir <- "../../Results/Exploratory/Trends"
if(!dir.exists(out_dir)) dir.create(out_dir, recursive = T)

# Read list of observatories of interest. Based on previous work.
stations <- read.csv(file.path(data_dir,"geo_peninsula_zones.csv"))
idx <- which(!is.na(stations$Zona))
stations <- stations[idx,]

# Read the data for maximum temperatures
tx.mat <- read.csv(file.path(data_dir,"tx.data","Tx_mat.csv"), header = TRUE)
tx.mat$Date <- as.Date(tx.mat$Date)
idx.y <- which(as.numeric(format(tx.mat$Date,"%Y")) > 1981 &
               as.numeric(format(tx.mat$Date,"%Y")) < 2010)
idx.d <- which(as.numeric(format(tx.mat$Date,"%m")) >=6 &
               as.numeric(format(tx.mat$Date,"%m")) <= 8)
stations$avg.Tx <- apply(X = tx.mat[intersect(idx.d,idx.y),-1],
                         MARGIN = 2,
                         FUN = function(x) mean(x, na.rm = T))/10
stations$sd.Tx <- apply(X = tx.mat[intersect(idx.d,idx.y),-1],
                         MARGIN = 2,
                         FUN = function(x) sd(x, na.rm = T))/10

# Standardize series
tx.mat[,-1] <- sweep(x = tx.mat[,-1]/10,
                     MARGIN = 2,
                     STATS = stations$avg.Tx,
                     FUN = "-")
tx.mat[,-1] <- sweep(x = tx.mat[,-1],
                     MARGIN = 2,
                     STATS = stations$sd.Tx,
                     FUN = "/")

# Set seasons
summer_idx <- c(152:243)
test_idx <- 52:64
# Reshape data into volume
LL <- 365
TT <- nrow(tx.mat)/LL
SS <- nrow(stations)
tx3d <- array(data = as.matrix(tx.mat[,-1]), dim = c(LL,TT,SS))[summer_idx,,]
voldim <- dim(tx3d)

# Get standardized Tx trends in the test period
# Compute yearly trend
trend_ztx <- apply(X = tx3d, MARGIN = 2, function(x) mean(x, na.rm = T))
# Plot inputs
trnd_df <- data.frame(ztx = trend_ztx,
                      t = 1:voldim[2])

# Plot
g3b <- ggplot(data = trnd_df,
              mapping =  aes(x=t)) +
  geom_hline(yintercept=0, color = "gray") +
  geom_line(aes(y=ztx), color="black") +
  geom_smooth(aes(y=ztx), color="black", se = F, linetype = "dashed") +
  ylim(c(-1, 1)) +
  ylab(expression(T[x](z))) +
  xlab("t (year)") +
  scale_x_continuous(breaks = c(1, 21, 41, 61),
                     labels = c("1 (1960)", "21 (1980)", "41 (2000)", " 61 (2020)")) +
  theme_bw()
show(g3b)

```

### Standardized Geopotentials

EDA for the daily maximum temperature ($T_x$) and geopotentials.

```{r}

# Read grid data
g300 <- read.csv(file.path(data_dir,"grid_data","g300_grid.csv"))
g300$date <- as.Date(g300$date)
g500 <- read.csv(file.path(data_dir,"grid_data","g500_grid.csv"))
g500$date <- as.Date(g500$date)
g700 <- read.csv(file.path(data_dir,"grid_data","g700_grid.csv"))
g700$date <- as.Date(g700$date)

# Reference period
idx.y <- which(as.numeric(format(g300$date,"%Y")) > 1981 &
               as.numeric(format(g300$date,"%Y")) < 2010)

# G300
g_avg <- apply(X = g300[idx.y,-1],
               MARGIN = 2,
               FUN = function(x) mean(x, na.rm = T))
g_sd <- apply(X = g300[idx.y,-1],
              MARGIN = 2,
              FUN = function(x) sd(x, na.rm = T))
# Standardize series
g300[,-1] <- sweep(x = g300[,-1],
                   MARGIN = 2,
                   STATS = g_avg,
                   FUN = "-")
g300[,-1] <- sweep(x = g300[,-1],
                   MARGIN = 2,
                   STATS = g_sd,
                   FUN = "/")
# Reshape data into volume
g3d <- array(data = as.matrix(g300[,-1]), dim = voldim)
# Compute yearly trend
trnd_df$G300 <- apply(X = g3d, MARGIN = 2, function(x) mean(x, na.rm = T))

# G500
g_avg <- apply(X = g500[idx.y,-1],
               MARGIN = 2,
               FUN = function(x) mean(x, na.rm = T))
g_sd <- apply(X = g500[idx.y,-1],
              MARGIN = 2,
              FUN = function(x) sd(x, na.rm = T))
# Standardize series
g500[,-1] <- sweep(x = g500[,-1],
                   MARGIN = 2,
                   STATS = g_avg,
                   FUN = "-")
g500[,-1] <- sweep(x = g500[,-1],
                   MARGIN = 2,
                   STATS = g_sd,
                   FUN = "/")
# Reshape data into volume
g3d <- array(data = as.matrix(g500[,-1]), dim = voldim)
# Compute yearly trend
trnd_df$G500 <- apply(X = g3d, MARGIN = 2, function(x) mean(x, na.rm = T))

# G700
g_avg <- apply(X = g700[idx.y,-1],
               MARGIN = 2,
               FUN = function(x) mean(x, na.rm = T))
g_sd <- apply(X = g700[idx.y,-1],
              MARGIN = 2,
              FUN = function(x) sd(x, na.rm = T))
# Standardize series
g700[,-1] <- sweep(x = g700[,-1],
                   MARGIN = 2,
                   STATS = g_avg,
                   FUN = "-")
g700[,-1] <- sweep(x = g700[,-1],
                   MARGIN = 2,
                   STATS = g_sd,
                   FUN = "/")
# Reshape data into volume
g3d <- array(data = as.matrix(g700[,-1]), dim = voldim)
# Compute yearly trend
trnd_df$G700 <- apply(X = g3d, MARGIN = 2, function(x) mean(x, na.rm = T))

# Plot it
g3c <- ggplot(data = trnd_df,
              mapping =  aes(x=t)) +
  geom_hline(yintercept=0, color = "gray") +
  #Tx
  geom_line(aes(y=ztx), color="black") +
  #G300
  geom_line(aes(y=G300), color="blue") +
  #G500
  geom_line(aes(y=G500), color="green") +
  #G700
  geom_line(aes(y=G700), color="red")
show(g3c)


# Reshape data.frame
# Plot inputs
avg_idx <- grep(pattern = "^t", names(trnd_df), invert = T)
trend_df <- data.frame(z = c(as.matrix(trnd_df[,avg_idx])),
                       Signal = rep(c("Tx","G300","G500","G700"), each = nrow(trnd_df)),
                       t = rep(1:nrow(trnd_df), length(avg_idx)))
# Figure
colorcito <- c("blue","green","red","black")
g3d <- ggplot(data = trend_df,
              mapping =  aes(x=t, y=z, color = Signal)) +
  geom_hline(yintercept=0,
             color = "gray") +
  geom_line() +
  theme_bw() +
  scale_color_manual(values = colorcito) +
  ylab("z") +
  xlab("t (year)") +
  scale_x_continuous(breaks = c(1, 21, 41, 61),
                     labels = c("1 (1960)", "21 (1980)", "41 (2000)", " 61 (2020)"))
show(g3d)

# Save
ggsave(filename = "trend_z_Ix_G.pdf",
       plot = g3d,
       device = "pdf",
       path = out_dir,
       width = 5,
       height = 4)

# Figure
colorcito <- c("blue","green","red","black")
g3e <- ggplot(data = trend_df,
              mapping =  aes(x=t, y=z, color = Signal)) +
  geom_hline(yintercept=0,
             color = "gray") +
  geom_smooth(method = "loess",
              formula = "y ~ x",
              se=F) +
  theme_bw() +
  scale_color_manual(values = colorcito) +
  ylab("z") +
  xlab("t (year)") +
  scale_x_continuous(breaks = c(1, 21, 41, 61),
                     labels = c("1 (1960)", "21 (1980)", "41 (2000)", " 61 (2020)"))
show(g3e)

# Save
ggsave(filename = "trend_pt_Ix_G_loess.pdf",
       plot = g3e,
       device = "pdf",
       path = out_dir,
       width = 5,
       height = 4)

```
